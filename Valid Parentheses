Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.

Example 1:
Input: s = "()"
Output: true

##################################-------------code-----------------------###########################

class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        l=[""]
        if s.find('[)') == True or s.find('[}')== True or s.find('{]')==True or s.find('{)')==True or s.find('(]')==True or s.find('(}')==True:
            return False
        else: 
            for i in range(len(s)):
                if s[i]=="(":
                    l.append('(')
                elif s[i]==")":
                    if "(" in l:
                        l.remove('(')
                    else:
                        return False
                elif s[i]=="[":
                    l.append('[')
                elif s[i]=="]":
                    if "[" in l:
                        l.remove('[')
                    else:
                        return False
                elif s[i]=="{":
                    l.append("{")
                elif s[i]=="}":
                    if "{" in l:
                        l.remove('{')
                    else:
                        return False
        if l == [""]:
            return True
        else:
            return False
